import requests    
import re    
from urllib.parse import urlparse    

class PyCrawler(object):    
    def __init__(self, starting_url):    
        self.starting_url = starting_url    
        self.visited = set()    

    def get_html(self, url):    
        try:    
            html = requests.get(url)    
        except Exception as e:    
            print(e)    
            return ""    
        return html.content.decode('latin-1')    

    def get_links(self, url):    
        html = self.get_html(url)    
        parsed = urlparse(url)    
        base = f"{parsed.scheme}://{parsed.netloc}"    
        links = re.findall('''<a\s+(?:[^>]*?\s+)?href="([^"]*)"''', html)    
        for i, link in enumerate(links):    
            if not urlparse(link).netloc:    
                link_with_base = base + link    
                links[i] = link_with_base    

        return set(filter(lambda x: 'mailto' not in x, links))    

    def extract_info(self, url):    
        html = self.get_html(url)    
        meta = re.findall("<meta .*?name=[\"'](.*?)['\"].*?content=[\"'](.*?)['\"].*?>", html)    
        return dict(meta)    

    def crawl(self, url):    
        for link in self.get_links(url):    
            if link in self.visited:    
                continue
            google = re.search("google",link)
            if google:
               continue
               print('link containst google')
            facebook = re.search("facebook",link)
            if facebook:
                continue
            twitter = re.search("twitter",link)
            if twitter:
                continue
            instagram = re.search("instagram",link)
            if instagram:
                continue
            apple = re.search("apple.com",link)
            if apple:
                continue
            microsoft = re.search("microsoft",link)
            if microsoft:
                continue
            samsung = re.search("samsung",link)
            if samsung:
                continue
            amazon = re.search("amazon.com",link)
            if amazon:
                continue
            linkedin = re.search("linkedin.com",link)
            if linkedin:
                continue






            self.visited.add(link)    
            info = self.extract_info(link)    

            print(f"""Link: {link}    
Description: {info.get('description')}    
Keywords: {info.get('keywords')}    
            """)    
	    
            file_object = open('links.txt', 'a')
            file_object.write(link + '\n')
            file_object.close()

            self.crawl(link)    

    def start(self):    
        self.crawl(self.starting_url)    

if __name__ == "__main__":    
    crawler = PyCrawler("https://planetred.world")     
    crawler.start()
